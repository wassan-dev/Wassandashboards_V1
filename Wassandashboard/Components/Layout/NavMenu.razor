@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar" >
    <div class="container-fluid  ">
        <h1 class="text-center text-white fw-bold px-5">RNisarg</h1>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable fw-bold" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item ">
            <NavLink class="nav-link" href="dashboard">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true">
                    <i class="bi bi-graph-up-arrow"
                       style="top:-12.5px;margin-left:10px"></i>
                </span> Dashboard
            </NavLink>
        </div>
        
        <AuthorizeView Policy="@Permissions.Projects.View">
            <div class="nav-item ">
                <NavLink class="nav-link" href="regions">
                    <span class="bi bi-persons-fill-nav-menu" aria-hidden="true">
                        <i class="bi bi-grid-1x2"
                           style="top:-12.5px;margin-left:10px"></i>
                    </span> Regions
                </NavLink>
            </div>
        </AuthorizeView>

        <AuthorizeView Policy="@Permissions.Projects.View">
            <div class="nav-item ">
                <NavLink class="nav-link" href="projects">
                    <span class="bi bi-persons-fill-nav-menu" aria-hidden="true">
                        <i class="bi bi-grid-1x2"
                           style="top:-12.5px;margin-left:10px"></i>
                    </span> Projects
                </NavLink>
            </div>
        </AuthorizeView>
      


        <AuthorizeView Roles="@RoleConstants.Wassandashboard">
            <Authorized>
                <div class="nav-item">
                    <NavLink class="nav-link" href="users">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true">
                            <i class="bi bi-person-workspace"
                               style="top:-12.5px;margin-left:10px"></i>
                        </span> Administrator
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item">
                    <NavLink class="nav-link" href="Account/Manage" style="font-size:14px;">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true" style="margin-right:10px">
                            <i class="bi bi-envelope" style="top:-12.5px;margin-left:10px"></i>
                        </span>
                        @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item" id="logout-button">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link fw-bold">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true">
                                <i class="bi bi-box-arrow-right" style="top:-12.5px;margin-left:10px"></i>
                            </span>
                            Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3 ">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu " aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code
{
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}